package com.rf1m.util;

import com.rf1m.web.image2css.Parameters.SupportedImageTypes;
import org.junit.Test;

import java.io.File;
import java.net.URL;
import java.util.HashSet;
import java.util.Set;

import static junit.framework.Assert.assertEquals;

public class TestFileUtils {
	String b64Bytes = "";
	
	@Test
	public void testGetExtension() throws Exception{
		final URL url1 = this.getClass().getResource("/small_boy_with_book.png");
		final URL url2 = this.getClass().getResource("/boy_with_book.gif");
		final URL url3 = this.getClass().getResource("/boy_with_book.jpg");
		final URL url4 = this.getClass().getResource("/boy_with_book.png");
		
		assertEquals("png",FileUtils.getExtension(url1.getFile()));
		assertEquals("gif",FileUtils.getExtension(url2.getFile()));
		assertEquals("jpg",FileUtils.getExtension(url3.getFile()));
		assertEquals("png",FileUtils.getExtension(url4.getFile()));
	} 
	
	@Test
	public void testGetFileBytes() throws Exception{
		final URL url = this.getClass().getResource("/small_boy_with_book.png");
		final byte[] bytes = FileUtils.getFileBytes(new File(url.getFile()));

		assertEquals(b64Bytes, ByteUtils.base64EncodeBytes(bytes));
	}
	
	@Test
	public void testGetImagesForConversion() throws Exception{
		final Set<SupportedImageTypes> png = new HashSet<SupportedImageTypes>();
		png.add(SupportedImageTypes.png);
		
		final Set<SupportedImageTypes> gif = new HashSet<SupportedImageTypes>();
		gif.add(SupportedImageTypes.gif);
		
		final Set<SupportedImageTypes> jpg = new HashSet<SupportedImageTypes>();
		jpg.add(SupportedImageTypes.jpg);
		
		final Set<SupportedImageTypes> jpgPng = new HashSet<SupportedImageTypes>();
		jpgPng.add(SupportedImageTypes.jpg);
		jpgPng.add(SupportedImageTypes.png);
		
		final URL url = this.getClass().getResource("/");
		final File dir = new File(url.getFile());
		
		assertEquals(4, FileUtils.getImagesForConversion(dir, null).length);
		assertEquals(2, FileUtils.getImagesForConversion(dir, png).length);
		assertEquals(1, FileUtils.getImagesForConversion(dir, gif).length);
		assertEquals(1, FileUtils.getImagesForConversion(dir, jpg).length);
		assertEquals(3, FileUtils.getImagesForConversion(dir, jpgPng).length);
	}
	
}
